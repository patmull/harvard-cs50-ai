FALSE POSITIVE EMPTY CELL:
{(4, 6), (0, 5), (1, 0), (1, 6), (2, 5), (3, 0), (4, 5), (3, 6), (0, 7), (2, 1), (3, 5), (0, 0), (0, 6)}

OK:
(4, 3), (3, 7), (3, 1), (7, 1), (5, 6), (2, 7), (1, 5), (1, 1)

neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (1, 7)
neighbor_cells_sum: 4
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (1, 7)
neighbor_cells_sum: 2
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (1, 7)
neighbor_cells_sum: 5
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (1, 7)
neighbor_cells_sum: 3
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (1, 7)
neighbor_cells_sum: 5
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (1, 7)
neighbor_cells_sum: 3
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (1, 7)
neighbor_cells_sum: 2
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (1, 7)
neighbor_cells_sum: 4
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (1, 7)
neighbor_cells_sum: 6
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (1, 7)
neighbor_cells_sum: 2
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (1, 7)
neighbor_cells_sum: 4
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (1, 7)
neighbor_cells_sum: 8
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (1, 7)
neighbor_cells_sum: 2
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (1, 7)
neighbor_cells_sum: 1
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
cells: {(2, 7)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
neighbor_cell_known: (2, 7)
neighbor_cell_known: (0, 7)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (0, 6)
neighbor_cell_known: (2, 6)
cells: {(0, 7)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
neighbor_cell_known: (2, 7)
neighbor_cell_known: (0, 7)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (0, 6)
neighbor_cell_known: (2, 6)
cells: {(1, 6)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
neighbor_cell_known: (2, 7)
neighbor_cell_known: (0, 7)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (0, 6)
neighbor_cell_known: (2, 6)
cells: {(0, 6)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
neighbor_cell_known: (2, 7)
neighbor_cell_known: (0, 7)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (0, 6)
neighbor_cell_known: (2, 6)
cells: {(2, 6)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
neighbor_cell_known: (2, 7)
neighbor_cell_known: (0, 7)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (0, 6)
neighbor_cell_known: (2, 6)
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (1, 7)
neighbor_cells_sum: 4
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (1, 7)
neighbor_cells_sum: 5
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (1, 7)
neighbor_cells_sum: 3
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (1, 7)
neighbor_cells_sum: 1
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (1, 7)
neighbor_cells_sum: 0
neighbor_cells: [(2, 7), (0, 7), (1, 6), (0, 6), (2, 6)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
board: [[None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(4, 4), (0, 7), (7, 1), (2, 7), (4, 3), (3, 1), (3, 7), (4, 6), (3, 0), (0, 6), (4, 5), (3, 3), (2, 6), (5, 6), (3, 6), (1, 6), (3, 2)}
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
safe_choices: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.suspected_mines_mild_danger: {(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_and_non_suspected_choices: set()
{(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_choices: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.suspected_mines_mild_danger: {(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_and_non_suspected_choices: set()
{(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
Searching for an option safer than a random move.
Making a move based on the SAFER RANDOM strategy. Using suspected cells: {}
AI making safe move.
(0, 1)
move.else
nearby
1
move
(0, 1)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(0, 1)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(0, 1)}
new_sentence
{(0, 1)} = 1
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (0, 1)
neighbor_cells_sum: 4
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (0, 1)
neighbor_cells_sum: 2
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (0, 1)
neighbor_cells_sum: 3
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (0, 1)
neighbor_cells_sum: 2
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (0, 1)
neighbor_cells_sum: 4
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (0, 1)
neighbor_cells_sum: 2
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (0, 1)
neighbor_cells_sum: 3
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (0, 1)
neighbor_cells_sum: 1
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (0, 1)
neighbor_cells_sum: 4
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (0, 1)
neighbor_cells_sum: 2
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (0, 1)
neighbor_cells_sum: 5
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (0, 1)
neighbor_cells_sum: 3
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (0, 1)
neighbor_cells_sum: 5
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (0, 1)
neighbor_cells_sum: 3
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (0, 1)
neighbor_cells_sum: 2
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (0, 1)
neighbor_cells_sum: 4
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (0, 1)
neighbor_cells_sum: 6
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (0, 1)
neighbor_cells_sum: 2
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (0, 1)
neighbor_cells_sum: 4
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (0, 1)
neighbor_cells_sum: 8
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (0, 1)
neighbor_cells_sum: 2
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (0, 1)
neighbor_cells_sum: 1
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
cells: {(1, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 0)
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 0)
neighbor_cell_known: (1, 2)
cells: {(0, 0)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 0)
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 0)
neighbor_cell_known: (1, 2)
cells: {(0, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 0)
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 0)
neighbor_cell_known: (1, 2)
cells: {(1, 0)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 0)
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 0)
neighbor_cell_known: (1, 2)
cells: {(1, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 0)
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 0)
neighbor_cell_known: (1, 2)
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (0, 1)
neighbor_cells_sum: 4
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (0, 1)
neighbor_cells_sum: 5
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (0, 1)
neighbor_cells_sum: 3
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (0, 1)
neighbor_cells_sum: 1
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (0, 1)
neighbor_cells_sum: 0
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (0, 1)
neighbor_cells_sum: 0
neighbor_cells: [(1, 1), (0, 0), (0, 2), (1, 0), (1, 2)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
board: [[None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, 1], [None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(4, 3), (3, 1), (3, 7), (4, 6), (0, 2), (1, 0), (1, 6), (7, 1), (3, 0), (4, 5), (3, 3), (5, 6), (3, 6), (0, 7), (1, 2), (2, 7), (3, 2), (4, 4), (0, 0), (1, 1), (0, 6), (2, 6)}
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
safe_choices: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.suspected_mines_mild_danger: {(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_and_non_suspected_choices: set()
{(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_choices: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.suspected_mines_mild_danger: {(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_and_non_suspected_choices: set()
{(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
Searching for an option safer than a random move.
Making a move based on the SAFER RANDOM strategy. Using suspected cells: {}
AI making safe move.
(2, 3)
move.else
nearby
0
move
(2, 3)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(2, 3)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(2, 3)}
new_sentence
{(2, 3)} = 0
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
{(2, 3)} = 0
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (2, 3)
neighbor_cells_sum: 4
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (2, 3)
neighbor_cells_sum: 2
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (2, 3)
neighbor_cells_sum: 3
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (2, 3)
neighbor_cells_sum: 2
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (2, 3)
neighbor_cells_sum: 4
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (2, 3)
neighbor_cells_sum: 2
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (2, 3)
neighbor_cells_sum: 3
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (2, 3)
neighbor_cells_sum: 1
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (2, 3)
neighbor_cells_sum: 4
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (2, 3)
neighbor_cells_sum: 2
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (2, 3)
neighbor_cells_sum: 5
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (2, 3)
neighbor_cells_sum: 3
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (2, 3)
neighbor_cells_sum: 5
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (2, 3)
neighbor_cells_sum: 3
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (2, 3)
neighbor_cells_sum: 2
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (2, 3)
neighbor_cells_sum: 4
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (2, 3)
neighbor_cells_sum: 6
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (2, 3)
neighbor_cells_sum: 2
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (2, 3)
neighbor_cells_sum: 4
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (2, 3)
neighbor_cells_sum: 8
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (2, 3)
neighbor_cells_sum: 2
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (2, 3)
neighbor_cells_sum: 1
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
cells: {(3, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
cells: {(1, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
cells: {(2, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
cells: {(2, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
cells: {(1, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
cells: {(1, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
cells: {(3, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
cells: {(3, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (2, 3)
neighbor_cells_sum: 4
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (2, 3)
neighbor_cells_sum: 5
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (2, 3)
neighbor_cells_sum: 3
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (2, 3)
neighbor_cells_sum: 1
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (2, 3)
neighbor_cells_sum: 0
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (2, 3)
neighbor_cells_sum: 0
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
cell: (2, 3)
neighbor_cells_sum: 0
neighbor_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
cell_count: None
cells: {(3, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
cells: {(1, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
cells: {(2, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
cells: {(2, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
cells: {(1, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
cells: {(1, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
cells: {(3, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
cells: {(3, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
neighbor_cell_known: (3, 3)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (2, 2)
neighbor_cell_known: (2, 4)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
self.mines_flagged:
set()
board: [[None, 1, None, None, None, None, None, None], [None, None, None, None, None, None, None, 1], [None, None, None, None, None, None, None, None], [None, None, None, None, None, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(3, 4), (4, 3), (3, 1), (3, 7), (4, 6), (0, 2), (2, 2), (1, 0), (1, 6), (1, 3), (7, 1), (3, 0), (4, 5), (3, 3), (5, 6), (3, 6), (0, 7), (2, 4), (1, 2), (2, 7), (3, 2), (4, 4), (0, 0), (1, 1), (1, 4), (0, 6), (2, 6)}
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
tested_neighbor_tuple: (2, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Based on the cross strategy, AI chose:
(2, 2)
THE CROSS OF ZEROS STRATEGY
AI making safe move.
(2, 2)
move.else
nearby
2
move
(2, 2)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(2, 2)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(2, 2)}
new_sentence
{(2, 2)} = 2
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
{(2, 3)} = 0
{(2, 2)} = 2
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (2, 2)
neighbor_cells_sum: 4
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (2, 2)
neighbor_cells_sum: 2
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (2, 2)
neighbor_cells_sum: 3
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (2, 2)
neighbor_cells_sum: 2
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (2, 2)
neighbor_cells_sum: 4
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (2, 2)
neighbor_cells_sum: 2
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (2, 2)
neighbor_cells_sum: 3
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (2, 2)
neighbor_cells_sum: 1
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (2, 2)
neighbor_cells_sum: 4
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (2, 2)
neighbor_cells_sum: 2
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (2, 2)
neighbor_cells_sum: 5
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (2, 2)
neighbor_cells_sum: 3
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (2, 2)
neighbor_cells_sum: 5
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (2, 2)
neighbor_cells_sum: 3
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (2, 2)
neighbor_cells_sum: 2
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (2, 2)
neighbor_cells_sum: 4
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (2, 2)
neighbor_cells_sum: 6
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (2, 2)
neighbor_cells_sum: 2
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (2, 2)
neighbor_cells_sum: 4
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (2, 2)
neighbor_cells_sum: 8
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (2, 2)
neighbor_cells_sum: 2
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (2, 2)
neighbor_cells_sum: 1
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
cells: {(3, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
neighbor_cell_known: (3, 2)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (3, 1)
neighbor_cell_known: (3, 3)
cells: {(1, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
neighbor_cell_known: (3, 2)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (3, 1)
neighbor_cell_known: (3, 3)
cells: {(2, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
neighbor_cell_known: (3, 2)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (3, 1)
neighbor_cell_known: (3, 3)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(1, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
neighbor_cell_known: (3, 2)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (3, 1)
neighbor_cell_known: (3, 3)
cells: {(1, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
neighbor_cell_known: (3, 2)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (3, 1)
neighbor_cell_known: (3, 3)
cells: {(3, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
neighbor_cell_known: (3, 2)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (3, 1)
neighbor_cell_known: (3, 3)
cells: {(3, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
neighbor_cell_known: (3, 2)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (3, 1)
neighbor_cell_known: (3, 3)
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (2, 2)
neighbor_cells_sum: 4
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (2, 2)
neighbor_cells_sum: 5
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (2, 2)
neighbor_cells_sum: 3
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (2, 2)
neighbor_cells_sum: 1
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (2, 2)
neighbor_cells_sum: 0
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (2, 2)
neighbor_cells_sum: 0
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
cell: (2, 2)
neighbor_cells_sum: 2
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: None
cell_count: 0
neighbor cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
free_neighbor_cells: {(1, 2), (2, 1), (3, 1), (1, 1), (3, 3), (3, 2), (1, 3)}
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
cell: (2, 2)
neighbor_cells_sum: 0
neighbor_cells: [(3, 2), (1, 2), (2, 1), (2, 3), (1, 1), (1, 3), (3, 1), (3, 3)]
cell_count: 0
self.mines_flagged:
set()
board: [[None, 1, None, None, None, None, None, None], [None, None, None, None, None, None, None, 1], [None, None, None, 0, None, None, None, None], [None, None, None, None, None, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(3, 4), (4, 3), (3, 1), (3, 7), (4, 6), (0, 2), (1, 0), (1, 6), (1, 3), (7, 1), (3, 0), (4, 5), (3, 3), (5, 6), (3, 6), (0, 7), (2, 4), (1, 2), (2, 1), (2, 7), (3, 2), (4, 4), (0, 0), (1, 1), (1, 4), (0, 6), (2, 6)}
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
tested_neighbor_tuple: (2, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Based on the cross strategy, AI chose:
(2, 4)
THE CROSS OF ZEROS STRATEGY
AI making safe move.
(2, 4)
move.else
nearby
1
move
(2, 4)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(2, 4)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(2, 4)}
new_sentence
{(2, 4)} = 1
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
{(2, 3)} = 0
{(2, 2)} = 2
{(2, 4)} = 1
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (2, 4)
neighbor_cells_sum: 4
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (2, 4)
neighbor_cells_sum: 2
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (2, 4)
neighbor_cells_sum: 3
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (2, 4)
neighbor_cells_sum: 2
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (2, 4)
neighbor_cells_sum: 4
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (2, 4)
neighbor_cells_sum: 2
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (2, 4)
neighbor_cells_sum: 3
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (2, 4)
neighbor_cells_sum: 1
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (2, 4)
neighbor_cells_sum: 4
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (2, 4)
neighbor_cells_sum: 2
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (2, 4)
neighbor_cells_sum: 5
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (2, 4)
neighbor_cells_sum: 3
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (2, 4)
neighbor_cells_sum: 5
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (2, 4)
neighbor_cells_sum: 3
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (2, 4)
neighbor_cells_sum: 2
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (2, 4)
neighbor_cells_sum: 4
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (2, 4)
neighbor_cells_sum: 6
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (2, 4)
neighbor_cells_sum: 2
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (2, 4)
neighbor_cells_sum: 4
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (2, 4)
neighbor_cells_sum: 8
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (2, 4)
neighbor_cells_sum: 2
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (2, 4)
neighbor_cells_sum: 1
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
cells: {(3, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
neighbor_cell_known: (3, 4)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 3)
neighbor_cell_known: (3, 5)
cells: {(1, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
neighbor_cell_known: (3, 4)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 3)
neighbor_cell_known: (3, 5)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(2, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
neighbor_cell_known: (3, 4)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 3)
neighbor_cell_known: (3, 5)
cells: {(1, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
neighbor_cell_known: (3, 4)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 3)
neighbor_cell_known: (3, 5)
cells: {(1, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
neighbor_cell_known: (3, 4)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 3)
neighbor_cell_known: (3, 5)
cells: {(3, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
neighbor_cell_known: (3, 4)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 3)
neighbor_cell_known: (3, 5)
cells: {(3, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
neighbor_cell_known: (3, 4)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (1, 3)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 3)
neighbor_cell_known: (3, 5)
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (2, 4)
neighbor_cells_sum: 4
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (2, 4)
neighbor_cells_sum: 5
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (2, 4)
neighbor_cells_sum: 3
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (2, 4)
neighbor_cells_sum: 1
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (2, 4)
neighbor_cells_sum: 0
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (2, 4)
neighbor_cells_sum: 0
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
cell: (2, 4)
neighbor_cells_sum: 3
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: None
cell_count: 0
neighbor cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
free_neighbor_cells: {(3, 4), (1, 5), (1, 4), (3, 3), (2, 5), (1, 3), (3, 5)}
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
cell: (2, 4)
neighbor_cells_sum: 0
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: 0
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
cell: (2, 4)
neighbor_cells_sum: 0
neighbor_cells: [(3, 4), (1, 4), (2, 3), (2, 5), (1, 3), (1, 5), (3, 3), (3, 5)]
cell_count: 0
Known mines
self.count: 1
len(self.cells): {(2, 4)}
len(self.cells): 1
{(2, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
board: [[None, 1, None, None, None, None, None, None], [None, None, None, None, None, None, None, 1], [None, None, 2, 0, None, None, None, None], [None, None, None, None, None, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(3, 4), (4, 3), (3, 1), (3, 7), (4, 6), (0, 2), (1, 0), (1, 6), (2, 5), (1, 3), (7, 1), (3, 0), (4, 5), (3, 3), (5, 6), (3, 6), (0, 7), (1, 2), (2, 1), (2, 7), (1, 5), (3, 2), (3, 5), (4, 4), (0, 0), (1, 1), (1, 4), (0, 6), (2, 6)}
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
tested_neighbor_tuple: (2, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (3, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Based on the cross strategy, AI chose:
(3, 3)
THE CROSS OF ZEROS STRATEGY
AI making safe move.
(3, 3)
move.else
nearby
1
move
(3, 3)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(3, 3)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(3, 3)}
new_sentence
{(3, 3)} = 1
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
{(2, 3)} = 0
{(2, 2)} = 2
{(2, 4)} = 1
{(3, 3)} = 1
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (3, 3)
neighbor_cells_sum: 4
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (3, 3)
neighbor_cells_sum: 2
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (3, 3)
neighbor_cells_sum: 3
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (3, 3)
neighbor_cells_sum: 2
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (3, 3)
neighbor_cells_sum: 4
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (3, 3)
neighbor_cells_sum: 2
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (3, 3)
neighbor_cells_sum: 3
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (3, 3)
neighbor_cells_sum: 1
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (3, 3)
neighbor_cells_sum: 4
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (3, 3)
neighbor_cells_sum: 2
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (3, 3)
neighbor_cells_sum: 5
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (3, 3)
neighbor_cells_sum: 3
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (3, 3)
neighbor_cells_sum: 5
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (3, 3)
neighbor_cells_sum: 3
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (3, 3)
neighbor_cells_sum: 2
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (3, 3)
neighbor_cells_sum: 4
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (3, 3)
neighbor_cells_sum: 6
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (3, 3)
neighbor_cells_sum: 2
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (3, 3)
neighbor_cells_sum: 4
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (3, 3)
neighbor_cells_sum: 8
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (3, 3)
neighbor_cells_sum: 2
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (3, 3)
neighbor_cells_sum: 1
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
cells: {(4, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
neighbor_cell_known: (4, 3)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
neighbor_cell_known: (4, 4)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(3, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
neighbor_cell_known: (4, 3)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
neighbor_cell_known: (4, 4)
cells: {(3, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
neighbor_cell_known: (4, 3)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
neighbor_cell_known: (4, 4)
cells: {(2, 2)}
intersection_1: {(2, 2)}
intersection_2: {(2, 2)}
(2, 2) cell is a false negative. Not a mines!
cells: {(2, 4)}
intersection_1: {(2, 4)}
intersection_2: {(2, 4)}
(2, 4) cell is a false negative. Not a mines!
cells: {(4, 2)}
intersection_1: {(4, 2)}
intersection_2: {(4, 2)}
(4, 2) cell is a false negative. Not a mines!
cells: {(4, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
neighbor_cell_known: (4, 3)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
neighbor_cell_known: (4, 4)
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (3, 3)
neighbor_cells_sum: 4
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (3, 3)
neighbor_cells_sum: 5
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (3, 3)
neighbor_cells_sum: 4
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: None
cell_count: 2
neighbor cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
free_neighbor_cells: {(4, 4), (3, 2), (3, 4), (4, 3)}
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (3, 3)
neighbor_cells_sum: 1
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: 2
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (3, 3)
neighbor_cells_sum: 0
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: 2
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (3, 3)
neighbor_cells_sum: 0
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: 2
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
cell: (3, 3)
neighbor_cells_sum: 4
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: 2
cell_count: 0
neighbor cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
free_neighbor_cells: {(4, 4), (3, 2), (3, 4), (4, 3)}
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
cell: (3, 3)
neighbor_cells_sum: 1
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: 0
cell_count: 2
neighbor cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
free_neighbor_cells: {(4, 4), (3, 2), (3, 4), (4, 3)}
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
cell: (3, 3)
neighbor_cells_sum: 1
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: 2
cells: {(4, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
neighbor_cell_known: (4, 3)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
neighbor_cell_known: (4, 4)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(3, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
neighbor_cell_known: (4, 3)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
neighbor_cell_known: (4, 4)
cells: {(3, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
neighbor_cell_known: (4, 3)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
neighbor_cell_known: (4, 4)
cells: {(2, 2)}
intersection_1: {(2, 2)}
intersection_2: {(2, 2)}
(2, 2) cell is a false negative. Not a mines!
cells: {(2, 4)}
intersection_1: {(2, 4)}
intersection_2: {(2, 4)}
(2, 4) cell is a false negative. Not a mines!
cells: {(4, 2)}
intersection_1: {(4, 2)}
intersection_2: {(4, 2)}
(4, 2) cell is a false negative. Not a mines!
cells: {(4, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
neighbor_cell_known: (4, 3)
neighbor_cell_known: (3, 2)
neighbor_cell_known: (3, 4)
neighbor_cell_known: (4, 4)
cell_count: 1
neighbor cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
free_neighbor_cells: {(4, 4), (3, 2), (3, 4), (4, 3)}
Known mines
self.count: 1
len(self.cells): {(2, 4)}
len(self.cells): 1
{(2, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
cell: (3, 3)
neighbor_cells_sum: 5
neighbor_cells: [(4, 3), (2, 3), (3, 2), (3, 4), (2, 2), (2, 4), (4, 2), (4, 4)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(3, 3)}
len(self.cells): 1
{(3, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
board: [[None, 1, None, None, None, None, None, None], [None, None, None, None, None, None, None, 1], [None, None, 2, 0, 1, None, None, None], [None, None, None, None, None, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(3, 4), (4, 3), (3, 1), (3, 7), (4, 6), (0, 2), (1, 0), (1, 6), (2, 5), (1, 3), (7, 1), (3, 0), (4, 5), (5, 6), (3, 6), (0, 7), (1, 2), (2, 1), (2, 7), (1, 5), (3, 2), (3, 5), (4, 4), (0, 0), (1, 1), (1, 4), (0, 6), (2, 6)}
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
tested_neighbor_tuple: (2, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (3, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Based on the cross strategy, AI chose:
(1, 3)
THE CROSS OF ZEROS STRATEGY
AI making safe move.
(1, 3)
move.else
nearby
0
move
(1, 3)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(1, 3)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(1, 3)}
new_sentence
{(1, 3)} = 0
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
{(2, 3)} = 0
{(2, 2)} = 2
{(2, 4)} = 1
{(3, 3)} = 1
{(1, 3)} = 0
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (1, 3)
neighbor_cells_sum: 4
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (1, 3)
neighbor_cells_sum: 2
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (1, 3)
neighbor_cells_sum: 3
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (1, 3)
neighbor_cells_sum: 2
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (1, 3)
neighbor_cells_sum: 4
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (1, 3)
neighbor_cells_sum: 2
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (1, 3)
neighbor_cells_sum: 3
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (1, 3)
neighbor_cells_sum: 1
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (1, 3)
neighbor_cells_sum: 4
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (1, 3)
neighbor_cells_sum: 2
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (1, 3)
neighbor_cells_sum: 5
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (1, 3)
neighbor_cells_sum: 3
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (1, 3)
neighbor_cells_sum: 5
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (1, 3)
neighbor_cells_sum: 3
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (1, 3)
neighbor_cells_sum: 2
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (1, 3)
neighbor_cells_sum: 4
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (1, 3)
neighbor_cells_sum: 6
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (1, 3)
neighbor_cells_sum: 2
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (1, 3)
neighbor_cells_sum: 4
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (1, 3)
neighbor_cells_sum: 8
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (1, 3)
neighbor_cells_sum: 2
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (1, 3)
neighbor_cells_sum: 1
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(0, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
neighbor_cell_known: (0, 3)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(1, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
neighbor_cell_known: (0, 3)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(1, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
neighbor_cell_known: (0, 3)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(0, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
neighbor_cell_known: (0, 3)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(0, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
neighbor_cell_known: (0, 3)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(2, 2)}
intersection_1: {(2, 2)}
intersection_2: {(2, 2)}
(2, 2) cell is a false negative. Not a mines!
cells: {(2, 4)}
intersection_1: {(2, 4)}
intersection_2: {(2, 4)}
(2, 4) cell is a false negative. Not a mines!
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (1, 3)
neighbor_cells_sum: 4
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (1, 3)
neighbor_cells_sum: 5
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (1, 3)
neighbor_cells_sum: 4
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (1, 3)
neighbor_cells_sum: 1
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (1, 3)
neighbor_cells_sum: 0
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (1, 3)
neighbor_cells_sum: 0
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
cell: (1, 3)
neighbor_cells_sum: 4
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: None
cell_count: 0
neighbor cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
free_neighbor_cells: {(1, 2), (0, 4), (0, 3), (1, 4), (0, 2)}
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
cell: (1, 3)
neighbor_cells_sum: 1
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: 0
cell_count: 2
neighbor cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
free_neighbor_cells: {(1, 2), (0, 4), (0, 3), (1, 4), (0, 2)}
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
cell: (1, 3)
neighbor_cells_sum: 1
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: 2
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(0, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
neighbor_cell_known: (0, 3)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(1, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
neighbor_cell_known: (0, 3)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(1, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
neighbor_cell_known: (0, 3)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(0, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
neighbor_cell_known: (0, 3)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(0, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
neighbor_cell_known: (0, 3)
neighbor_cell_known: (1, 2)
neighbor_cell_known: (1, 4)
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(2, 2)}
intersection_1: {(2, 2)}
intersection_2: {(2, 2)}
(2, 2) cell is a false negative. Not a mines!
cells: {(2, 4)}
intersection_1: {(2, 4)}
intersection_2: {(2, 4)}
(2, 4) cell is a false negative. Not a mines!
cell_count: 1
neighbor cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
free_neighbor_cells: {(1, 2), (0, 4), (0, 3), (1, 4), (0, 2)}
Known mines
self.count: 1
len(self.cells): {(2, 4)}
len(self.cells): 1
{(2, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
cell: (1, 3)
neighbor_cells_sum: 5
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(3, 3)}
len(self.cells): 1
{(3, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
cell: (1, 3)
neighbor_cells_sum: 3
neighbor_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
cell_count: 1
self.mines_flagged:
set()
board: [[None, 1, None, None, None, None, None, None], [None, None, None, None, None, None, None, 1], [None, None, 2, 0, 1, None, None, None], [None, None, None, 1, None, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(3, 4), (4, 3), (3, 1), (3, 7), (4, 6), (0, 2), (1, 0), (1, 6), (2, 5), (7, 1), (3, 0), (4, 5), (5, 6), (3, 6), (0, 7), (1, 2), (0, 4), (2, 1), (2, 7), (1, 5), (3, 2), (3, 5), (4, 4), (0, 0), (1, 1), (0, 3), (1, 4), (0, 6), (2, 6)}
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
tested_neighbor_tuple: (2, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (3, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(2, 3)} = 0
sentence.cells[0]
(2, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (2, 3)
neighbour_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
CORNERS NEIGHBOURS OF ZERO CELLS STRATEGY:
AI making safe move.
(1, 2)
move.else
nearby
1
move
(1, 2)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(1, 2)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(1, 2)}
new_sentence
{(1, 2)} = 1
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
{(2, 3)} = 0
{(2, 2)} = 2
{(2, 4)} = 1
{(3, 3)} = 1
{(1, 3)} = 0
{(1, 2)} = 1
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (1, 2)
neighbor_cells_sum: 4
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (1, 2)
neighbor_cells_sum: 2
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (1, 2)
neighbor_cells_sum: 3
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (1, 2)
neighbor_cells_sum: 2
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (1, 2)
neighbor_cells_sum: 4
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (1, 2)
neighbor_cells_sum: 2
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (1, 2)
neighbor_cells_sum: 3
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (1, 2)
neighbor_cells_sum: 1
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (1, 2)
neighbor_cells_sum: 4
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (1, 2)
neighbor_cells_sum: 2
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (1, 2)
neighbor_cells_sum: 5
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (1, 2)
neighbor_cells_sum: 3
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (1, 2)
neighbor_cells_sum: 5
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (1, 2)
neighbor_cells_sum: 3
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (1, 2)
neighbor_cells_sum: 2
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (1, 2)
neighbor_cells_sum: 4
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (1, 2)
neighbor_cells_sum: 6
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (1, 2)
neighbor_cells_sum: 2
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (1, 2)
neighbor_cells_sum: 4
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (1, 2)
neighbor_cells_sum: 8
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (1, 2)
neighbor_cells_sum: 2
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (1, 2)
neighbor_cells_sum: 1
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
cells: {(2, 2)}
intersection_1: {(2, 2)}
intersection_2: {(2, 2)}
(2, 2) cell is a false negative. Not a mines!
cells: {(0, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(1, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(1, 3)}
intersection_1: {(1, 3)}
intersection_2: {(1, 3)}
(1, 3) cell is a false negative. Not a mines!
cells: {(0, 1)}
intersection_1: {(0, 1)}
intersection_2: {(0, 1)}
(0, 1) cell is a false negative. Not a mines!
cells: {(0, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(2, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (1, 2)
neighbor_cells_sum: 4
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (1, 2)
neighbor_cells_sum: 5
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (1, 2)
neighbor_cells_sum: 4
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (1, 2)
neighbor_cells_sum: 1
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (1, 2)
neighbor_cells_sum: 0
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (1, 2)
neighbor_cells_sum: 1
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: None
cells: {(2, 2)}
intersection_1: {(2, 2)}
intersection_2: {(2, 2)}
(2, 2) cell is a false negative. Not a mines!
cells: {(0, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(1, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(1, 3)}
intersection_1: {(1, 3)}
intersection_2: {(1, 3)}
(1, 3) cell is a false negative. Not a mines!
cells: {(0, 1)}
intersection_1: {(0, 1)}
intersection_2: {(0, 1)}
(0, 1) cell is a false negative. Not a mines!
cells: {(0, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(2, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cell_count: 1
neighbor cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
free_neighbor_cells: {(1, 1), (0, 3), (2, 1), (0, 2)}
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
cell: (1, 2)
neighbor_cells_sum: 5
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: 1
cell_count: 0
neighbor cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
free_neighbor_cells: {(1, 1), (0, 3), (2, 1), (0, 2)}
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
cell: (1, 2)
neighbor_cells_sum: 2
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: 0
cells: {(2, 2)}
intersection_1: {(2, 2)}
intersection_2: {(2, 2)}
(2, 2) cell is a false negative. Not a mines!
cells: {(0, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(1, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(1, 3)}
intersection_1: {(1, 3)}
intersection_2: {(1, 3)}
(1, 3) cell is a false negative. Not a mines!
cells: {(0, 1)}
intersection_1: {(0, 1)}
intersection_2: {(0, 1)}
(0, 1) cell is a false negative. Not a mines!
cells: {(0, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(2, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cell_count: 2
neighbor cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
free_neighbor_cells: {(1, 1), (0, 3), (2, 1), (0, 2)}
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
cell: (1, 2)
neighbor_cells_sum: 1
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: 2
cells: {(2, 2)}
intersection_1: {(2, 2)}
intersection_2: {(2, 2)}
(2, 2) cell is a false negative. Not a mines!
cells: {(0, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(1, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(1, 3)}
intersection_1: {(1, 3)}
intersection_2: {(1, 3)}
(1, 3) cell is a false negative. Not a mines!
cells: {(0, 1)}
intersection_1: {(0, 1)}
intersection_2: {(0, 1)}
(0, 1) cell is a false negative. Not a mines!
cells: {(0, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(2, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (2, 1)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
Known mines
self.count: 1
len(self.cells): {(2, 4)}
len(self.cells): 1
{(2, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
cell: (1, 2)
neighbor_cells_sum: 5
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: 2
Known mines
self.count: 1
len(self.cells): {(3, 3)}
len(self.cells): 1
{(3, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
cell: (1, 2)
neighbor_cells_sum: 4
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: 2
cell_count: 0
neighbor cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
free_neighbor_cells: {(1, 1), (0, 3), (2, 1), (0, 2)}
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
cell: (1, 2)
neighbor_cells_sum: 3
neighbor_cells: [(2, 2), (0, 2), (1, 1), (1, 3), (0, 1), (0, 3), (2, 1), (2, 3)]
cell_count: 0
Known mines
self.count: 1
len(self.cells): {(1, 2)}
len(self.cells): 1
{(1, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
board: [[None, 1, None, None, None, None, None, None], [None, None, None, 0, None, None, None, 1], [None, None, 2, 0, 1, None, None, None], [None, None, None, 1, None, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(3, 4), (4, 3), (3, 1), (3, 7), (4, 6), (0, 2), (1, 0), (1, 6), (2, 5), (7, 1), (3, 0), (4, 5), (5, 6), (3, 6), (0, 7), (0, 4), (2, 1), (2, 7), (1, 5), (3, 2), (3, 5), (4, 4), (0, 0), (1, 1), (0, 3), (1, 4), (0, 6), (2, 6)}
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
tested_neighbor_tuple: (2, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (3, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(2, 3)} = 0
sentence.cells[0]
(2, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (2, 3)
neighbour_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
CORNERS NEIGHBOURS OF ZERO CELLS STRATEGY:
AI making safe move.
(1, 4)
move.else
nearby
1
move
(1, 4)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(1, 4)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(1, 4)}
new_sentence
{(1, 4)} = 1
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
{(2, 3)} = 0
{(2, 2)} = 2
{(2, 4)} = 1
{(3, 3)} = 1
{(1, 3)} = 0
{(1, 2)} = 1
{(1, 4)} = 1
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (1, 4)
neighbor_cells_sum: 4
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (1, 4)
neighbor_cells_sum: 2
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (1, 4)
neighbor_cells_sum: 3
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (1, 4)
neighbor_cells_sum: 2
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (1, 4)
neighbor_cells_sum: 4
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (1, 4)
neighbor_cells_sum: 2
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (1, 4)
neighbor_cells_sum: 3
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (1, 4)
neighbor_cells_sum: 1
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (1, 4)
neighbor_cells_sum: 4
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (1, 4)
neighbor_cells_sum: 2
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (1, 4)
neighbor_cells_sum: 5
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (1, 4)
neighbor_cells_sum: 3
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (1, 4)
neighbor_cells_sum: 5
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (1, 4)
neighbor_cells_sum: 3
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (1, 4)
neighbor_cells_sum: 2
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (1, 4)
neighbor_cells_sum: 4
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (1, 4)
neighbor_cells_sum: 6
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (1, 4)
neighbor_cells_sum: 2
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (1, 4)
neighbor_cells_sum: 4
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (1, 4)
neighbor_cells_sum: 8
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (1, 4)
neighbor_cells_sum: 2
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (1, 4)
neighbor_cells_sum: 1
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
cells: {(2, 4)}
intersection_1: {(2, 4)}
intersection_2: {(2, 4)}
(2, 4) cell is a false negative. Not a mines!
cells: {(0, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(1, 3)}
intersection_1: {(1, 3)}
intersection_2: {(1, 3)}
(1, 3) cell is a false negative. Not a mines!
cells: {(1, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(0, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(0, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(2, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (1, 4)
neighbor_cells_sum: 4
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (1, 4)
neighbor_cells_sum: 5
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (1, 4)
neighbor_cells_sum: 4
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (1, 4)
neighbor_cells_sum: 1
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (1, 4)
neighbor_cells_sum: 0
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (1, 4)
neighbor_cells_sum: 1
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
cells: {(2, 4)}
intersection_1: {(2, 4)}
intersection_2: {(2, 4)}
(2, 4) cell is a false negative. Not a mines!
cells: {(0, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(1, 3)}
intersection_1: {(1, 3)}
intersection_2: {(1, 3)}
(1, 3) cell is a false negative. Not a mines!
cells: {(1, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(0, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(0, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(2, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
cell: (1, 4)
neighbor_cells_sum: 6
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: None
cell_count: 0
neighbor cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
free_neighbor_cells: {(0, 4), (1, 5), (0, 3), (0, 5), (2, 5)}
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
cell: (1, 4)
neighbor_cells_sum: 2
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: 0
cells: {(2, 4)}
intersection_1: {(2, 4)}
intersection_2: {(2, 4)}
(2, 4) cell is a false negative. Not a mines!
cells: {(0, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(1, 3)}
intersection_1: {(1, 3)}
intersection_2: {(1, 3)}
(1, 3) cell is a false negative. Not a mines!
cells: {(1, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(0, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(0, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(2, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
cell: (1, 4)
neighbor_cells_sum: 2
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: 0
cell_count: 1
neighbor cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
free_neighbor_cells: {(0, 4), (1, 5), (0, 3), (0, 5), (2, 5)}
Known mines
self.count: 1
len(self.cells): {(2, 4)}
len(self.cells): 1
{(2, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
cell: (1, 4)
neighbor_cells_sum: 5
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(3, 3)}
len(self.cells): 1
{(3, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
cell: (1, 4)
neighbor_cells_sum: 5
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: 1
cell_count: 0
neighbor cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
free_neighbor_cells: {(0, 4), (1, 5), (0, 3), (0, 5), (2, 5)}
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
cell: (1, 4)
neighbor_cells_sum: 3
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: 0
Known mines
self.count: 1
len(self.cells): {(1, 2)}
len(self.cells): 1
{(1, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
cell: (1, 4)
neighbor_cells_sum: 1
neighbor_cells: [(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
cell_count: 0
cells: {(2, 4)}
intersection_1: {(2, 4)}
intersection_2: {(2, 4)}
(2, 4) cell is a false negative. Not a mines!
cells: {(0, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(1, 3)}
intersection_1: {(1, 3)}
intersection_2: {(1, 3)}
(1, 3) cell is a false negative. Not a mines!
cells: {(1, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(0, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(0, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(2, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(2, 4), (0, 4), (1, 3), (1, 5), (0, 3), (0, 5), (2, 3), (2, 5)]
neighbor_cell_known: (0, 4)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (0, 3)
neighbor_cell_known: (0, 5)
neighbor_cell_known: (2, 5)
Known mines
self.count: 1
len(self.cells): {(1, 4)}
len(self.cells): 1
{(1, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
board: [[None, 1, None, None, None, None, None, None], [None, None, 1, 0, None, None, None, 1], [None, None, 2, 0, 1, None, None, None], [None, None, None, 1, None, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(3, 4), (4, 3), (3, 1), (3, 7), (4, 6), (0, 2), (0, 5), (1, 0), (1, 6), (2, 5), (7, 1), (3, 0), (4, 5), (5, 6), (3, 6), (0, 7), (0, 4), (2, 1), (2, 7), (1, 5), (3, 2), (3, 5), (4, 4), (0, 0), (1, 1), (0, 3), (0, 6), (2, 6)}
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
tested_neighbor_tuple: (2, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (3, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(2, 3)} = 0
sentence.cells[0]
(2, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (2, 3)
neighbour_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
CORNERS NEIGHBOURS OF ZERO CELLS STRATEGY:
AI making safe move.
(3, 2)
move.else
nearby
2
move
(3, 2)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(3, 2)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(3, 2)}
new_sentence
{(3, 2)} = 2
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
{(2, 3)} = 0
{(2, 2)} = 2
{(2, 4)} = 1
{(3, 3)} = 1
{(1, 3)} = 0
{(1, 2)} = 1
{(1, 4)} = 1
{(3, 2)} = 2
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (3, 2)
neighbor_cells_sum: 4
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (3, 2)
neighbor_cells_sum: 2
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (3, 2)
neighbor_cells_sum: 3
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (3, 2)
neighbor_cells_sum: 2
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (3, 2)
neighbor_cells_sum: 4
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (3, 2)
neighbor_cells_sum: 2
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (3, 2)
neighbor_cells_sum: 3
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (3, 2)
neighbor_cells_sum: 1
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (3, 2)
neighbor_cells_sum: 4
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (3, 2)
neighbor_cells_sum: 2
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (3, 2)
neighbor_cells_sum: 5
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (3, 2)
neighbor_cells_sum: 3
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (3, 2)
neighbor_cells_sum: 5
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (3, 2)
neighbor_cells_sum: 3
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (3, 2)
neighbor_cells_sum: 2
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (3, 2)
neighbor_cells_sum: 4
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (3, 2)
neighbor_cells_sum: 6
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (3, 2)
neighbor_cells_sum: 2
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (3, 2)
neighbor_cells_sum: 4
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (3, 2)
neighbor_cells_sum: 8
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (3, 2)
neighbor_cells_sum: 2
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (3, 2)
neighbor_cells_sum: 1
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
cells: {(4, 2)}
intersection_1: {(4, 2)}
intersection_2: {(4, 2)}
(4, 2) cell is a false negative. Not a mines!
cells: {(2, 2)}
intersection_1: {(2, 2)}
intersection_2: {(2, 2)}
(2, 2) cell is a false negative. Not a mines!
cells: {(3, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
neighbor_cell_known: (3, 1)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (4, 3)
cells: {(3, 3)}
intersection_1: {(3, 3)}
intersection_2: {(3, 3)}
(3, 3) cell is a false negative. Not a mines!
cells: {(2, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
neighbor_cell_known: (3, 1)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (4, 3)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(4, 1)}
intersection_1: {(4, 1)}
intersection_2: {(4, 1)}
(4, 1) cell is a false negative. Not a mines!
cells: {(4, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
neighbor_cell_known: (3, 1)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (4, 3)
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (3, 2)
neighbor_cells_sum: 6
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: None
cell_count: 1
neighbor cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
free_neighbor_cells: {(3, 1), (2, 1), (4, 3)}
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (3, 2)
neighbor_cells_sum: 5
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (3, 2)
neighbor_cells_sum: 6
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: 1
cell_count: 2
neighbor cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
free_neighbor_cells: {(3, 1), (2, 1), (4, 3)}
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (3, 2)
neighbor_cells_sum: 1
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: 2
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (3, 2)
neighbor_cells_sum: 0
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: 2
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (3, 2)
neighbor_cells_sum: 1
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: 2
cells: {(4, 2)}
intersection_1: {(4, 2)}
intersection_2: {(4, 2)}
(4, 2) cell is a false negative. Not a mines!
cells: {(2, 2)}
intersection_1: {(2, 2)}
intersection_2: {(2, 2)}
(2, 2) cell is a false negative. Not a mines!
cells: {(3, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
neighbor_cell_known: (3, 1)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (4, 3)
cells: {(3, 3)}
intersection_1: {(3, 3)}
intersection_2: {(3, 3)}
(3, 3) cell is a false negative. Not a mines!
cells: {(2, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
neighbor_cell_known: (3, 1)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (4, 3)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(4, 1)}
intersection_1: {(4, 1)}
intersection_2: {(4, 1)}
(4, 1) cell is a false negative. Not a mines!
cells: {(4, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
neighbor_cell_known: (3, 1)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (4, 3)
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
cell: (3, 2)
neighbor_cells_sum: 8
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: 2
cell_count: 0
neighbor cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
free_neighbor_cells: {(3, 1), (2, 1), (4, 3)}
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
cell: (3, 2)
neighbor_cells_sum: 4
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: 0
cell_count: 2
neighbor cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
free_neighbor_cells: {(3, 1), (2, 1), (4, 3)}
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
cell: (3, 2)
neighbor_cells_sum: 2
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: 2
Known mines
self.count: 1
len(self.cells): {(2, 4)}
len(self.cells): 1
{(2, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
cell: (3, 2)
neighbor_cells_sum: 7
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: 2
cell_count: 1
neighbor cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
free_neighbor_cells: {(3, 1), (2, 1), (4, 3)}
Known mines
self.count: 1
len(self.cells): {(3, 3)}
len(self.cells): 1
{(3, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
cell: (3, 2)
neighbor_cells_sum: 5
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
cell: (3, 2)
neighbor_cells_sum: 3
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(1, 2)}
len(self.cells): 1
{(1, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
cell: (3, 2)
neighbor_cells_sum: 1
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: 1
cells: {(4, 2)}
intersection_1: {(4, 2)}
intersection_2: {(4, 2)}
(4, 2) cell is a false negative. Not a mines!
cells: {(2, 2)}
intersection_1: {(2, 2)}
intersection_2: {(2, 2)}
(2, 2) cell is a false negative. Not a mines!
cells: {(3, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
neighbor_cell_known: (3, 1)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (4, 3)
cells: {(3, 3)}
intersection_1: {(3, 3)}
intersection_2: {(3, 3)}
(3, 3) cell is a false negative. Not a mines!
cells: {(2, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
neighbor_cell_known: (3, 1)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (4, 3)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(4, 1)}
intersection_1: {(4, 1)}
intersection_2: {(4, 1)}
(4, 1) cell is a false negative. Not a mines!
cells: {(4, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
neighbor_cell_known: (3, 1)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (4, 3)
Known mines
self.count: 1
len(self.cells): {(1, 4)}
len(self.cells): 1
{(1, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
cell: (3, 2)
neighbor_cells_sum: 6
neighbor_cells: [(4, 2), (2, 2), (3, 1), (3, 3), (2, 1), (2, 3), (4, 1), (4, 3)]
cell_count: 1
self.mines_flagged:
set()
board: [[None, 1, None, None, None, None, None, None], [None, None, 1, 0, 1, None, None, 1], [None, None, 2, 0, 1, None, None, None], [None, None, None, 1, None, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(3, 4), (4, 3), (3, 1), (3, 7), (4, 6), (0, 2), (0, 5), (1, 0), (1, 6), (2, 5), (7, 1), (3, 0), (4, 5), (5, 6), (3, 6), (0, 7), (0, 4), (2, 1), (2, 7), (1, 5), (3, 5), (4, 4), (0, 0), (1, 1), (0, 3), (0, 6), (2, 6)}
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
tested_neighbor_tuple: (2, 2)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 4)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (3, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(2, 3)} = 0
sentence.cells[0]
(2, 3)
self.moves_made: {(4, 0), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (2, 3)
neighbour_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
CORNERS NEIGHBOURS OF ZERO CELLS STRATEGY:
AI making safe move.
(3, 4)
move.else
nearby
1
move
(3, 4)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(3, 4)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(3, 4)}
new_sentence
{(3, 4)} = 1
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
{(2, 3)} = 0
{(2, 2)} = 2
{(2, 4)} = 1
{(3, 3)} = 1
{(1, 3)} = 0
{(1, 2)} = 1
{(1, 4)} = 1
{(3, 2)} = 2
{(3, 4)} = 1
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (3, 4)
neighbor_cells_sum: 4
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (3, 4)
neighbor_cells_sum: 2
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (3, 4)
neighbor_cells_sum: 3
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (3, 4)
neighbor_cells_sum: 2
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (3, 4)
neighbor_cells_sum: 4
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (3, 4)
neighbor_cells_sum: 2
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (3, 4)
neighbor_cells_sum: 3
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (3, 4)
neighbor_cells_sum: 1
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (3, 4)
neighbor_cells_sum: 4
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (3, 4)
neighbor_cells_sum: 2
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (3, 4)
neighbor_cells_sum: 5
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (3, 4)
neighbor_cells_sum: 3
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (3, 4)
neighbor_cells_sum: 5
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (3, 4)
neighbor_cells_sum: 3
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (3, 4)
neighbor_cells_sum: 2
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (3, 4)
neighbor_cells_sum: 4
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (3, 4)
neighbor_cells_sum: 6
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (3, 4)
neighbor_cells_sum: 2
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (3, 4)
neighbor_cells_sum: 4
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (3, 4)
neighbor_cells_sum: 8
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (3, 4)
neighbor_cells_sum: 2
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (3, 4)
neighbor_cells_sum: 1
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
cells: {(4, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
neighbor_cell_known: (4, 4)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
cells: {(2, 4)}
intersection_1: {(2, 4)}
intersection_2: {(2, 4)}
(2, 4) cell is a false negative. Not a mines!
cells: {(3, 3)}
intersection_1: {(3, 3)}
intersection_2: {(3, 3)}
(3, 3) cell is a false negative. Not a mines!
cells: {(3, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
neighbor_cell_known: (4, 4)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(2, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
neighbor_cell_known: (4, 4)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
cells: {(4, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
neighbor_cell_known: (4, 4)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
cells: {(4, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
neighbor_cell_known: (4, 4)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (3, 4)
neighbor_cells_sum: 6
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (3, 4)
neighbor_cells_sum: 5
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (3, 4)
neighbor_cells_sum: 6
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (3, 4)
neighbor_cells_sum: 1
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (3, 4)
neighbor_cells_sum: 0
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (3, 4)
neighbor_cells_sum: 1
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
cells: {(4, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
neighbor_cell_known: (4, 4)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
cells: {(2, 4)}
intersection_1: {(2, 4)}
intersection_2: {(2, 4)}
(2, 4) cell is a false negative. Not a mines!
cells: {(3, 3)}
intersection_1: {(3, 3)}
intersection_2: {(3, 3)}
(3, 3) cell is a false negative. Not a mines!
cells: {(3, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
neighbor_cell_known: (4, 4)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(2, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
neighbor_cell_known: (4, 4)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
cells: {(4, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
neighbor_cell_known: (4, 4)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
cells: {(4, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
neighbor_cell_known: (4, 4)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
cell: (3, 4)
neighbor_cells_sum: 9
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: None
cell_count: 0
neighbor cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
free_neighbor_cells: {(4, 4), (4, 3), (4, 5), (2, 5), (3, 5)}
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
cell: (3, 4)
neighbor_cells_sum: 4
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: 0
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
cell: (3, 4)
neighbor_cells_sum: 3
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: 0
cell_count: 1
neighbor cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
free_neighbor_cells: {(4, 4), (4, 3), (4, 5), (2, 5), (3, 5)}
Known mines
self.count: 1
len(self.cells): {(2, 4)}
len(self.cells): 1
{(2, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
cell: (3, 4)
neighbor_cells_sum: 8
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: 1
cell_count: 1
neighbor cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
free_neighbor_cells: {(4, 4), (4, 3), (4, 5), (2, 5), (3, 5)}
Known mines
self.count: 1
len(self.cells): {(3, 3)}
len(self.cells): 1
{(3, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
cell: (3, 4)
neighbor_cells_sum: 5
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
cell: (3, 4)
neighbor_cells_sum: 3
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(1, 2)}
len(self.cells): 1
{(1, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
cell: (3, 4)
neighbor_cells_sum: 1
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: 1
cells: {(4, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
neighbor_cell_known: (4, 4)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
cells: {(2, 4)}
intersection_1: {(2, 4)}
intersection_2: {(2, 4)}
(2, 4) cell is a false negative. Not a mines!
cells: {(3, 3)}
intersection_1: {(3, 3)}
intersection_2: {(3, 3)}
(3, 3) cell is a false negative. Not a mines!
cells: {(3, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
neighbor_cell_known: (4, 4)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
cells: {(2, 3)}
intersection_1: {(2, 3)}
intersection_2: {(2, 3)}
(2, 3) cell is a false negative. Not a mines!
cells: {(2, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
neighbor_cell_known: (4, 4)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
cells: {(4, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
neighbor_cell_known: (4, 4)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
cells: {(4, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
neighbor_cell_known: (4, 4)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
Known mines
self.count: 1
len(self.cells): {(1, 4)}
len(self.cells): 1
{(1, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
cell: (3, 4)
neighbor_cells_sum: 6
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
cell: (3, 4)
neighbor_cells_sum: 2
neighbor_cells: [(4, 4), (2, 4), (3, 3), (3, 5), (2, 3), (2, 5), (4, 3), (4, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(3, 4)}
len(self.cells): 1
{(3, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
board: [[None, 1, None, None, None, None, None, None], [None, None, 1, 0, 1, None, None, 1], [None, None, 2, 0, 1, None, None, None], [None, None, 2, 1, None, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(4, 3), (3, 1), (3, 7), (4, 6), (0, 2), (0, 5), (1, 0), (1, 6), (2, 5), (7, 1), (3, 0), (4, 5), (5, 6), (3, 6), (0, 7), (0, 4), (2, 1), (2, 7), (1, 5), (3, 5), (4, 4), (0, 0), (1, 1), (0, 3), (0, 6), (2, 6)}
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
tested_neighbor_tuple: (2, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (3, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(2, 3)} = 0
sentence.cells[0]
(2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (2, 3)
neighbour_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
tested_neighbor_tuple: (1, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (0, 3) is out of canvas.
{(1, 3)} = 0
sentence.cells[0]
(1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (1, 3)
neighbour_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
CORNERS NEIGHBOURS OF ZERO CELLS STRATEGY:
AI making safe move.
(0, 3)
move.else
nearby
0
move
(0, 3)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(0, 3)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(0, 3)}
new_sentence
{(0, 3)} = 0
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
{(2, 3)} = 0
{(2, 2)} = 2
{(2, 4)} = 1
{(3, 3)} = 1
{(1, 3)} = 0
{(1, 2)} = 1
{(1, 4)} = 1
{(3, 2)} = 2
{(3, 4)} = 1
{(0, 3)} = 0
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (0, 3)
neighbor_cells_sum: 4
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (0, 3)
neighbor_cells_sum: 2
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (0, 3)
neighbor_cells_sum: 3
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (0, 3)
neighbor_cells_sum: 2
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (0, 3)
neighbor_cells_sum: 4
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (0, 3)
neighbor_cells_sum: 2
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (0, 3)
neighbor_cells_sum: 3
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (0, 3)
neighbor_cells_sum: 1
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (0, 3)
neighbor_cells_sum: 4
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (0, 3)
neighbor_cells_sum: 2
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (0, 3)
neighbor_cells_sum: 5
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (0, 3)
neighbor_cells_sum: 3
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (0, 3)
neighbor_cells_sum: 5
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (0, 3)
neighbor_cells_sum: 3
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (0, 3)
neighbor_cells_sum: 2
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (0, 3)
neighbor_cells_sum: 4
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (0, 3)
neighbor_cells_sum: 6
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (0, 3)
neighbor_cells_sum: 2
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (0, 3)
neighbor_cells_sum: 4
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (0, 3)
neighbor_cells_sum: 8
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (0, 3)
neighbor_cells_sum: 2
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (0, 3)
neighbor_cells_sum: 1
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
cells: {(1, 3)}
intersection_1: {(1, 3)}
intersection_2: {(1, 3)}
(1, 3) cell is a false negative. Not a mines!
cells: {(0, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(0, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(1, 2)}
intersection_1: {(1, 2)}
intersection_2: {(1, 2)}
(1, 2) cell is a false negative. Not a mines!
cells: {(1, 4)}
intersection_1: {(1, 4)}
intersection_2: {(1, 4)}
(1, 4) cell is a false negative. Not a mines!
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (0, 3)
neighbor_cells_sum: 6
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (0, 3)
neighbor_cells_sum: 5
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (0, 3)
neighbor_cells_sum: 6
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (0, 3)
neighbor_cells_sum: 1
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (0, 3)
neighbor_cells_sum: 0
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (0, 3)
neighbor_cells_sum: 1
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
cells: {(1, 3)}
intersection_1: {(1, 3)}
intersection_2: {(1, 3)}
(1, 3) cell is a false negative. Not a mines!
cells: {(0, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(0, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(1, 2)}
intersection_1: {(1, 2)}
intersection_2: {(1, 2)}
(1, 2) cell is a false negative. Not a mines!
cells: {(1, 4)}
intersection_1: {(1, 4)}
intersection_2: {(1, 4)}
(1, 4) cell is a false negative. Not a mines!
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
cell: (0, 3)
neighbor_cells_sum: 9
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
cell: (0, 3)
neighbor_cells_sum: 4
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
cell: (0, 3)
neighbor_cells_sum: 3
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(2, 4)}
len(self.cells): 1
{(2, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
cell: (0, 3)
neighbor_cells_sum: 8
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(3, 3)}
len(self.cells): 1
{(3, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
cell: (0, 3)
neighbor_cells_sum: 5
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: None
cell_count: 0
neighbor cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
free_neighbor_cells: {(0, 2), (0, 4)}
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
cell: (0, 3)
neighbor_cells_sum: 3
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: 0
cell_count: 1
neighbor cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
free_neighbor_cells: {(0, 2), (0, 4)}
Known mines
self.count: 1
len(self.cells): {(1, 2)}
len(self.cells): 1
{(1, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
cell: (0, 3)
neighbor_cells_sum: 1
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: 1
cells: {(1, 3)}
intersection_1: {(1, 3)}
intersection_2: {(1, 3)}
(1, 3) cell is a false negative. Not a mines!
cells: {(0, 2)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(0, 4)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
neighbor_cell_known: (0, 2)
neighbor_cell_known: (0, 4)
cells: {(1, 2)}
intersection_1: {(1, 2)}
intersection_2: {(1, 2)}
(1, 2) cell is a false negative. Not a mines!
cells: {(1, 4)}
intersection_1: {(1, 4)}
intersection_2: {(1, 4)}
(1, 4) cell is a false negative. Not a mines!
cell_count: 1
neighbor cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
free_neighbor_cells: {(0, 2), (0, 4)}
Known mines
self.count: 1
len(self.cells): {(1, 4)}
len(self.cells): 1
{(1, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
cell: (0, 3)
neighbor_cells_sum: 6
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
cell: (0, 3)
neighbor_cells_sum: 2
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(3, 4)}
len(self.cells): 1
{(3, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
cell: (0, 3)
neighbor_cells_sum: 2
neighbor_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
cell_count: 1
self.mines_flagged:
set()
board: [[None, 1, None, None, None, None, None, None], [None, None, 1, 0, 1, None, None, 1], [None, None, 2, 0, 1, None, None, None], [None, None, 2, 1, 1, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(4, 3), (3, 1), (3, 7), (4, 6), (0, 2), (0, 5), (1, 0), (1, 6), (2, 5), (7, 1), (3, 0), (4, 5), (5, 6), (3, 6), (0, 7), (0, 4), (2, 1), (2, 7), (1, 5), (3, 5), (4, 4), (0, 0), (1, 1), (0, 6), (2, 6)}
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
tested_neighbor_tuple: (2, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (3, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(2, 3)} = 0
sentence.cells[0]
(2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (2, 3)
neighbour_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
tested_neighbor_tuple: (1, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (0, 3) is out of canvas.
{(1, 3)} = 0
sentence.cells[0]
(1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (1, 3)
neighbour_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
CORNERS NEIGHBOURS OF ZERO CELLS STRATEGY:
AI making safe move.
(0, 2)
move.else
nearby
1
move
(0, 2)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(0, 2)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(0, 2)}
new_sentence
{(0, 2)} = 1
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
{(2, 3)} = 0
{(2, 2)} = 2
{(2, 4)} = 1
{(3, 3)} = 1
{(1, 3)} = 0
{(1, 2)} = 1
{(1, 4)} = 1
{(3, 2)} = 2
{(3, 4)} = 1
{(0, 3)} = 0
{(0, 2)} = 1
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (0, 2)
neighbor_cells_sum: 4
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (0, 2)
neighbor_cells_sum: 2
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (0, 2)
neighbor_cells_sum: 3
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (0, 2)
neighbor_cells_sum: 2
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (0, 2)
neighbor_cells_sum: 4
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (0, 2)
neighbor_cells_sum: 2
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (0, 2)
neighbor_cells_sum: 3
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (0, 2)
neighbor_cells_sum: 1
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (0, 2)
neighbor_cells_sum: 4
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (0, 2)
neighbor_cells_sum: 2
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (0, 2)
neighbor_cells_sum: 5
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (0, 2)
neighbor_cells_sum: 3
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (0, 2)
neighbor_cells_sum: 5
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (0, 2)
neighbor_cells_sum: 3
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (0, 2)
neighbor_cells_sum: 2
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (0, 2)
neighbor_cells_sum: 4
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (0, 2)
neighbor_cells_sum: 6
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (0, 2)
neighbor_cells_sum: 2
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (0, 2)
neighbor_cells_sum: 4
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (0, 2)
neighbor_cells_sum: 8
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (0, 2)
neighbor_cells_sum: 2
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (0, 2)
neighbor_cells_sum: 1
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
cells: {(1, 2)}
intersection_1: {(1, 2)}
intersection_2: {(1, 2)}
(1, 2) cell is a false negative. Not a mines!
cells: {(0, 1)}
intersection_1: {(0, 1)}
intersection_2: {(0, 1)}
(0, 1) cell is a false negative. Not a mines!
cells: {(0, 3)}
intersection_1: {(0, 3)}
intersection_2: {(0, 3)}
(0, 3) cell is a false negative. Not a mines!
cells: {(1, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
neighbor_cell_known: (1, 1)
cells: {(1, 3)}
intersection_1: {(1, 3)}
intersection_2: {(1, 3)}
(1, 3) cell is a false negative. Not a mines!
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (0, 2)
neighbor_cells_sum: 6
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (0, 2)
neighbor_cells_sum: 5
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (0, 2)
neighbor_cells_sum: 6
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (0, 2)
neighbor_cells_sum: 1
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (0, 2)
neighbor_cells_sum: 0
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (0, 2)
neighbor_cells_sum: 2
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: None
cell_count: 1
neighbor cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
free_neighbor_cells: {(1, 1)}
Adding to mines: {(1, 1)}
add_mines_known_by_ai:self.safes_known: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Cell is out of the canvas or None. Not doing anything.
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
cell: (0, 2)
neighbor_cells_sum: 9
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
cell: (0, 2)
neighbor_cells_sum: 4
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
cell: (0, 2)
neighbor_cells_sum: 3
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(2, 4)}
len(self.cells): 1
{(2, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
cell: (0, 2)
neighbor_cells_sum: 8
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(3, 3)}
len(self.cells): 1
{(3, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
cell: (0, 2)
neighbor_cells_sum: 6
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: 1
cell_count: 0
neighbor cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
free_neighbor_cells: {(1, 1)}
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
cell: (0, 2)
neighbor_cells_sum: 4
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: 0
cell_count: 1
neighbor cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
free_neighbor_cells: {(1, 1)}
Adding to mines: {(1, 1)}
add_mines_known_by_ai:self.safes_known: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Cell is out of the canvas or None. Not doing anything.
Known mines
self.count: 1
len(self.cells): {(1, 2)}
len(self.cells): 1
{(1, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
cell: (0, 2)
neighbor_cells_sum: 1
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: 1
cells: {(1, 2)}
intersection_1: {(1, 2)}
intersection_2: {(1, 2)}
(1, 2) cell is a false negative. Not a mines!
cells: {(0, 1)}
intersection_1: {(0, 1)}
intersection_2: {(0, 1)}
(0, 1) cell is a false negative. Not a mines!
cells: {(0, 3)}
intersection_1: {(0, 3)}
intersection_2: {(0, 3)}
(0, 3) cell is a false negative. Not a mines!
cells: {(1, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
neighbor_cell_known: (1, 1)
cells: {(1, 3)}
intersection_1: {(1, 3)}
intersection_2: {(1, 3)}
(1, 3) cell is a false negative. Not a mines!
Known mines
self.count: 1
len(self.cells): {(1, 4)}
len(self.cells): 1
{(1, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
cell: (0, 2)
neighbor_cells_sum: 6
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
cell: (0, 2)
neighbor_cells_sum: 2
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(3, 4)}
len(self.cells): 1
{(3, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
cell: (0, 2)
neighbor_cells_sum: 3
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: 1
cell_count: 0
neighbor cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
free_neighbor_cells: {(1, 1)}
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
cell: (0, 2)
neighbor_cells_sum: 2
neighbor_cells: [(1, 2), (0, 1), (0, 3), (1, 1), (1, 3)]
cell_count: 0
Known mines
self.count: 1
len(self.cells): {(0, 2)}
len(self.cells): 1
{(0, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
board: [[None, 1, None, 0, None, None, None, None], [None, None, 1, 0, 1, None, None, 1], [None, None, 2, 0, 1, None, None, None], [None, None, 2, 1, 1, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(4, 3), (3, 1), (3, 7), (4, 6), (0, 5), (1, 0), (1, 6), (2, 5), (7, 1), (3, 0), (4, 5), (5, 6), (3, 6), (0, 7), (0, 4), (2, 1), (2, 7), (1, 5), (3, 5), (4, 4), (0, 0), (1, 1), (0, 6), (2, 6)}
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
tested_neighbor_tuple: (2, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (3, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(2, 3)} = 0
sentence.cells[0]
(2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (2, 3)
neighbour_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
tested_neighbor_tuple: (1, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (0, 3) is out of canvas.
{(1, 3)} = 0
sentence.cells[0]
(1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (1, 3)
neighbour_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
CORNERS NEIGHBOURS OF ZERO CELLS STRATEGY:
AI making safe move.
(0, 4)
move.else
nearby
1
move
(0, 4)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(0, 4)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(0, 4)}
new_sentence
{(0, 4)} = 1
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
{(2, 3)} = 0
{(2, 2)} = 2
{(2, 4)} = 1
{(3, 3)} = 1
{(1, 3)} = 0
{(1, 2)} = 1
{(1, 4)} = 1
{(3, 2)} = 2
{(3, 4)} = 1
{(0, 3)} = 0
{(0, 2)} = 1
{(0, 4)} = 1
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (0, 4)
neighbor_cells_sum: 4
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (0, 4)
neighbor_cells_sum: 2
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (0, 4)
neighbor_cells_sum: 3
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (0, 4)
neighbor_cells_sum: 2
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (0, 4)
neighbor_cells_sum: 4
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (0, 4)
neighbor_cells_sum: 2
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (0, 4)
neighbor_cells_sum: 3
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (0, 4)
neighbor_cells_sum: 1
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (0, 4)
neighbor_cells_sum: 4
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (0, 4)
neighbor_cells_sum: 2
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (0, 4)
neighbor_cells_sum: 5
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (0, 4)
neighbor_cells_sum: 3
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (0, 4)
neighbor_cells_sum: 5
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (0, 4)
neighbor_cells_sum: 3
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (0, 4)
neighbor_cells_sum: 2
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (0, 4)
neighbor_cells_sum: 4
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (0, 4)
neighbor_cells_sum: 6
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (0, 4)
neighbor_cells_sum: 2
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (0, 4)
neighbor_cells_sum: 4
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (0, 4)
neighbor_cells_sum: 8
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (0, 4)
neighbor_cells_sum: 2
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (0, 4)
neighbor_cells_sum: 1
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
cells: {(1, 4)}
intersection_1: {(1, 4)}
intersection_2: {(1, 4)}
(1, 4) cell is a false negative. Not a mines!
cells: {(0, 3)}
intersection_1: {(0, 3)}
intersection_2: {(0, 3)}
(0, 3) cell is a false negative. Not a mines!
cells: {(0, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
neighbor_cell_known: (0, 5)
neighbor_cell_known: (1, 5)
cells: {(1, 3)}
intersection_1: {(1, 3)}
intersection_2: {(1, 3)}
(1, 3) cell is a false negative. Not a mines!
cells: {(1, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
neighbor_cell_known: (0, 5)
neighbor_cell_known: (1, 5)
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (0, 4)
neighbor_cells_sum: 6
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (0, 4)
neighbor_cells_sum: 5
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (0, 4)
neighbor_cells_sum: 6
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (0, 4)
neighbor_cells_sum: 1
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (0, 4)
neighbor_cells_sum: 0
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (0, 4)
neighbor_cells_sum: 2
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
cell: (0, 4)
neighbor_cells_sum: 9
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
cell: (0, 4)
neighbor_cells_sum: 4
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
cell: (0, 4)
neighbor_cells_sum: 3
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(2, 4)}
len(self.cells): 1
{(2, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
cell: (0, 4)
neighbor_cells_sum: 8
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(3, 3)}
len(self.cells): 1
{(3, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
cell: (0, 4)
neighbor_cells_sum: 7
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: None
cell_count: 0
neighbor cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
free_neighbor_cells: {(0, 5), (1, 5)}
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
cell: (0, 4)
neighbor_cells_sum: 4
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: 0
Known mines
self.count: 1
len(self.cells): {(1, 2)}
len(self.cells): 1
{(1, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
cell: (0, 4)
neighbor_cells_sum: 2
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: 0
cell_count: 1
neighbor cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
free_neighbor_cells: {(0, 5), (1, 5)}
Known mines
self.count: 1
len(self.cells): {(1, 4)}
len(self.cells): 1
{(1, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
cell: (0, 4)
neighbor_cells_sum: 6
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
cell: (0, 4)
neighbor_cells_sum: 2
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(3, 4)}
len(self.cells): 1
{(3, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
cell: (0, 4)
neighbor_cells_sum: 4
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: 1
cell_count: 0
neighbor cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
free_neighbor_cells: {(0, 5), (1, 5)}
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
cell: (0, 4)
neighbor_cells_sum: 2
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: 0
Known mines
self.count: 1
len(self.cells): {(0, 2)}
len(self.cells): 1
{(0, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
cell: (0, 4)
neighbor_cells_sum: 1
neighbor_cells: [(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
cell_count: 0
cells: {(1, 4)}
intersection_1: {(1, 4)}
intersection_2: {(1, 4)}
(1, 4) cell is a false negative. Not a mines!
cells: {(0, 3)}
intersection_1: {(0, 3)}
intersection_2: {(0, 3)}
(0, 3) cell is a false negative. Not a mines!
cells: {(0, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
neighbor_cell_known: (0, 5)
neighbor_cell_known: (1, 5)
cells: {(1, 3)}
intersection_1: {(1, 3)}
intersection_2: {(1, 3)}
(1, 3) cell is a false negative. Not a mines!
cells: {(1, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(1, 4), (0, 3), (0, 5), (1, 3), (1, 5)]
neighbor_cell_known: (0, 5)
neighbor_cell_known: (1, 5)
Known mines
self.count: 1
len(self.cells): {(0, 4)}
len(self.cells): 1
{(0, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
board: [[None, 1, 1, 0, None, None, None, None], [None, None, 1, 0, 1, None, None, 1], [None, None, 2, 0, 1, None, None, None], [None, None, 2, 1, 1, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(4, 3), (3, 1), (3, 7), (4, 6), (0, 5), (1, 0), (1, 6), (2, 5), (7, 1), (3, 0), (4, 5), (5, 6), (3, 6), (0, 7), (2, 1), (2, 7), (1, 5), (3, 5), (4, 4), (0, 0), (1, 1), (0, 6), (2, 6)}
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
tested_neighbor_tuple: (2, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (3, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(2, 3)} = 0
sentence.cells[0]
(2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (2, 3)
neighbour_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
tested_neighbor_tuple: (1, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (0, 3) is out of canvas.
{(1, 3)} = 0
sentence.cells[0]
(1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (1, 3)
neighbour_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
Tested tuple (0, 2) is out of canvas.
Tested tuple (0, 4) is out of canvas.
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (-1, 3) is out of canvas.
{(0, 3)} = 0
sentence.cells[0]
(0, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (0, 3)
neighbour_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
safe_choices: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.suspected_mines_mild_danger: {(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_and_non_suspected_choices: set()
{(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_choices: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.suspected_mines_mild_danger: {(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_and_non_suspected_choices: set()
{(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
Searching for an option safer than a random move.
Making a move based on the SAFER RANDOM strategy. Using suspected cells: {}
AI making safe move.
(2, 0)
move.else
nearby
2
move
(2, 0)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(2, 0)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(2, 0)}
new_sentence
{(2, 0)} = 2
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
{(2, 3)} = 0
{(2, 2)} = 2
{(2, 4)} = 1
{(3, 3)} = 1
{(1, 3)} = 0
{(1, 2)} = 1
{(1, 4)} = 1
{(3, 2)} = 2
{(3, 4)} = 1
{(0, 3)} = 0
{(0, 2)} = 1
{(0, 4)} = 1
{(2, 0)} = 2
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (2, 0)
neighbor_cells_sum: 4
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (2, 0)
neighbor_cells_sum: 2
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (2, 0)
neighbor_cells_sum: 3
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (2, 0)
neighbor_cells_sum: 2
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (2, 0)
neighbor_cells_sum: 4
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (2, 0)
neighbor_cells_sum: 2
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (2, 0)
neighbor_cells_sum: 3
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (2, 0)
neighbor_cells_sum: 1
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (2, 0)
neighbor_cells_sum: 4
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (2, 0)
neighbor_cells_sum: 2
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (2, 0)
neighbor_cells_sum: 5
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (2, 0)
neighbor_cells_sum: 3
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (2, 0)
neighbor_cells_sum: 5
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (2, 0)
neighbor_cells_sum: 3
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (2, 0)
neighbor_cells_sum: 2
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (2, 0)
neighbor_cells_sum: 4
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (2, 0)
neighbor_cells_sum: 6
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (2, 0)
neighbor_cells_sum: 2
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (2, 0)
neighbor_cells_sum: 4
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (2, 0)
neighbor_cells_sum: 8
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (2, 0)
neighbor_cells_sum: 2
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (2, 0)
neighbor_cells_sum: 1
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
cells: {(3, 0)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
neighbor_cell_known: (3, 0)
neighbor_cell_known: (1, 0)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (3, 1)
cells: {(1, 0)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
neighbor_cell_known: (3, 0)
neighbor_cell_known: (1, 0)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (3, 1)
cells: {(2, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
neighbor_cell_known: (3, 0)
neighbor_cell_known: (1, 0)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (3, 1)
cells: {(1, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
neighbor_cell_known: (3, 0)
neighbor_cell_known: (1, 0)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (3, 1)
cells: {(3, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
neighbor_cell_known: (3, 0)
neighbor_cell_known: (1, 0)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (3, 1)
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (2, 0)
neighbor_cells_sum: 6
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (2, 0)
neighbor_cells_sum: 5
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (2, 0)
neighbor_cells_sum: 6
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (2, 0)
neighbor_cells_sum: 1
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (2, 0)
neighbor_cells_sum: 0
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (2, 0)
neighbor_cells_sum: 2
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
cell: (2, 0)
neighbor_cells_sum: 9
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
cell: (2, 0)
neighbor_cells_sum: 4
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
cell: (2, 0)
neighbor_cells_sum: 3
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(2, 4)}
len(self.cells): 1
{(2, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
cell: (2, 0)
neighbor_cells_sum: 8
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(3, 3)}
len(self.cells): 1
{(3, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
cell: (2, 0)
neighbor_cells_sum: 7
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
cell: (2, 0)
neighbor_cells_sum: 4
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(1, 2)}
len(self.cells): 1
{(1, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
cell: (2, 0)
neighbor_cells_sum: 2
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(1, 4)}
len(self.cells): 1
{(1, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
cell: (2, 0)
neighbor_cells_sum: 6
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
cell: (2, 0)
neighbor_cells_sum: 2
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(3, 4)}
len(self.cells): 1
{(3, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
cell: (2, 0)
neighbor_cells_sum: 4
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
cell: (2, 0)
neighbor_cells_sum: 2
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(0, 2)}
len(self.cells): 1
{(0, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
cell: (2, 0)
neighbor_cells_sum: 1
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
cells: {(3, 0)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
neighbor_cell_known: (3, 0)
neighbor_cell_known: (1, 0)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (3, 1)
cells: {(1, 0)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
neighbor_cell_known: (3, 0)
neighbor_cell_known: (1, 0)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (3, 1)
cells: {(2, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
neighbor_cell_known: (3, 0)
neighbor_cell_known: (1, 0)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (3, 1)
cells: {(1, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
neighbor_cell_known: (3, 0)
neighbor_cell_known: (1, 0)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (3, 1)
cells: {(3, 1)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
neighbor_cell_known: (3, 0)
neighbor_cell_known: (1, 0)
neighbor_cell_known: (2, 1)
neighbor_cell_known: (1, 1)
neighbor_cell_known: (3, 1)
Known mines
self.count: 1
len(self.cells): {(0, 4)}
len(self.cells): 1
{(0, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (3, 1)
cell: (2, 0)
neighbor_cells_sum: 0
neighbor_cells: [(3, 0), (1, 0), (2, 1), (1, 1), (3, 1)]
cell_count: None
self.mines_flagged:
set()
board: [[None, 1, 1, 0, 1, None, None, None], [None, None, 1, 0, 1, None, None, 1], [None, None, 2, 0, 1, None, None, None], [None, None, 2, 1, 1, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(4, 3), (3, 1), (3, 7), (4, 6), (0, 5), (1, 0), (1, 6), (2, 5), (7, 1), (3, 0), (4, 5), (5, 6), (3, 6), (0, 7), (2, 1), (2, 7), (1, 5), (3, 5), (4, 4), (0, 0), (1, 1), (0, 6), (2, 6)}
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
tested_neighbor_tuple: (2, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (3, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(2, 3)} = 0
sentence.cells[0]
(2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (2, 3)
neighbour_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
tested_neighbor_tuple: (1, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (0, 3) is out of canvas.
{(1, 3)} = 0
sentence.cells[0]
(1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (1, 3)
neighbour_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
Tested tuple (0, 2) is out of canvas.
Tested tuple (0, 4) is out of canvas.
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (-1, 3) is out of canvas.
{(0, 3)} = 0
sentence.cells[0]
(0, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (0, 3)
neighbour_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
safe_choices: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.suspected_mines_mild_danger: {(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_and_non_suspected_choices: set()
{(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_choices: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.suspected_mines_mild_danger: {(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_and_non_suspected_choices: set()
{(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
Searching for an option safer than a random move.
No known safe moves, AI making random move.
(4, 4)
move.else
nearby
1
move
(4, 4)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(4, 4)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(4, 4)}
new_sentence
{(4, 4)} = 1
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
{(2, 3)} = 0
{(2, 2)} = 2
{(2, 4)} = 1
{(3, 3)} = 1
{(1, 3)} = 0
{(1, 2)} = 1
{(1, 4)} = 1
{(3, 2)} = 2
{(3, 4)} = 1
{(0, 3)} = 0
{(0, 2)} = 1
{(0, 4)} = 1
{(2, 0)} = 2
{(4, 4)} = 1
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (4, 4)
neighbor_cells_sum: 4
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (4, 4)
neighbor_cells_sum: 2
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (4, 4)
neighbor_cells_sum: 3
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (4, 4)
neighbor_cells_sum: 2
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (4, 4)
neighbor_cells_sum: 4
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (4, 4)
neighbor_cells_sum: 2
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (4, 4)
neighbor_cells_sum: 3
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (4, 4)
neighbor_cells_sum: 1
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (4, 4)
neighbor_cells_sum: 4
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (4, 4)
neighbor_cells_sum: 2
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (4, 4)
neighbor_cells_sum: 5
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (4, 4)
neighbor_cells_sum: 4
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: None
cell_count: 1
neighbor cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
free_neighbor_cells: {(4, 5), (3, 5), (4, 3)}
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (4, 4)
neighbor_cells_sum: 6
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
cell_count: 1
neighbor cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
free_neighbor_cells: {(4, 5), (3, 5), (4, 3)}
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (4, 4)
neighbor_cells_sum: 4
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
cell_count: 1
neighbor cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
free_neighbor_cells: {(4, 5), (3, 5), (4, 3)}
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (4, 4)
neighbor_cells_sum: 2
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (4, 4)
neighbor_cells_sum: 4
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (4, 4)
neighbor_cells_sum: 6
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (4, 4)
neighbor_cells_sum: 2
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (4, 4)
neighbor_cells_sum: 4
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (4, 4)
neighbor_cells_sum: 8
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (4, 4)
neighbor_cells_sum: 2
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (4, 4)
neighbor_cells_sum: 1
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
cells: {(5, 4)}
intersection_1: {(5, 4)}
intersection_2: {(5, 4)}
(5, 4) cell is a false negative. Not a mines!
cells: {(3, 4)}
intersection_1: {(3, 4)}
intersection_2: {(3, 4)}
(3, 4) cell is a false negative. Not a mines!
cells: {(4, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
neighbor_cell_known: (3, 5)
cells: {(4, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
neighbor_cell_known: (3, 5)
cells: {(3, 3)}
intersection_1: {(3, 3)}
intersection_2: {(3, 3)}
(3, 3) cell is a false negative. Not a mines!
cells: {(3, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
neighbor_cell_known: (3, 5)
cells: {(5, 3)}
intersection_1: {(5, 3)}
intersection_2: {(5, 3)}
(5, 3) cell is a false negative. Not a mines!
cells: {(5, 5)}
intersection_1: {(5, 5)}
intersection_2: {(5, 5)}
(5, 5) cell is a false negative. Not a mines!
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (4, 4)
neighbor_cells_sum: 6
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (4, 4)
neighbor_cells_sum: 5
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (4, 4)
neighbor_cells_sum: 6
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (4, 4)
neighbor_cells_sum: 1
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (4, 4)
neighbor_cells_sum: 0
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (4, 4)
neighbor_cells_sum: 2
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
cell: (4, 4)
neighbor_cells_sum: 9
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
cell: (4, 4)
neighbor_cells_sum: 4
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
cell: (4, 4)
neighbor_cells_sum: 3
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(2, 4)}
len(self.cells): 1
{(2, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
cell: (4, 4)
neighbor_cells_sum: 9
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
cell_count: 1
neighbor cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
free_neighbor_cells: {(4, 5), (3, 5), (4, 3)}
Known mines
self.count: 1
len(self.cells): {(3, 3)}
len(self.cells): 1
{(3, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
cell: (4, 4)
neighbor_cells_sum: 7
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
cell: (4, 4)
neighbor_cells_sum: 4
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(1, 2)}
len(self.cells): 1
{(1, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
cell: (4, 4)
neighbor_cells_sum: 2
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(1, 4)}
len(self.cells): 1
{(1, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
cell: (4, 4)
neighbor_cells_sum: 6
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
cell: (4, 4)
neighbor_cells_sum: 3
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
cell_count: 1
neighbor cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
free_neighbor_cells: {(4, 5), (3, 5), (4, 3)}
Known mines
self.count: 1
len(self.cells): {(3, 4)}
len(self.cells): 1
{(3, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
cell: (4, 4)
neighbor_cells_sum: 4
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
cell: (4, 4)
neighbor_cells_sum: 2
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(0, 2)}
len(self.cells): 1
{(0, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
cell: (4, 4)
neighbor_cells_sum: 1
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
cells: {(5, 4)}
intersection_1: {(5, 4)}
intersection_2: {(5, 4)}
(5, 4) cell is a false negative. Not a mines!
cells: {(3, 4)}
intersection_1: {(3, 4)}
intersection_2: {(3, 4)}
(3, 4) cell is a false negative. Not a mines!
cells: {(4, 3)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
neighbor_cell_known: (3, 5)
cells: {(4, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
neighbor_cell_known: (3, 5)
cells: {(3, 3)}
intersection_1: {(3, 3)}
intersection_2: {(3, 3)}
(3, 3) cell is a false negative. Not a mines!
cells: {(3, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
neighbor_cell_known: (4, 3)
neighbor_cell_known: (4, 5)
neighbor_cell_known: (3, 5)
cells: {(5, 3)}
intersection_1: {(5, 3)}
intersection_2: {(5, 3)}
(5, 3) cell is a false negative. Not a mines!
cells: {(5, 5)}
intersection_1: {(5, 5)}
intersection_2: {(5, 5)}
(5, 5) cell is a false negative. Not a mines!
Known mines
self.count: 1
len(self.cells): {(0, 4)}
len(self.cells): 1
{(0, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (3, 1)
cell: (4, 4)
neighbor_cells_sum: 0
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
cell: (4, 4)
neighbor_cells_sum: 5
neighbor_cells: [(5, 4), (3, 4), (4, 3), (4, 5), (3, 3), (3, 5), (5, 3), (5, 5)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(4, 4)}
len(self.cells): 1
{(4, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
board: [[None, 1, 1, 0, 1, None, None, None], [None, None, 1, 0, 1, None, None, 1], [2, None, 2, 0, 1, None, None, None], [None, None, 2, 1, 1, None, None, None], [1, 1, 2, None, None, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(4, 3), (3, 1), (3, 7), (4, 6), (0, 5), (1, 0), (1, 6), (2, 5), (7, 1), (3, 0), (4, 5), (5, 6), (3, 6), (0, 7), (2, 1), (2, 7), (1, 5), (3, 5), (0, 0), (1, 1), (0, 6), (2, 6)}
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
tested_neighbor_tuple: (2, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (3, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(2, 3)} = 0
sentence.cells[0]
(2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (2, 3)
neighbour_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
tested_neighbor_tuple: (1, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (0, 3) is out of canvas.
{(1, 3)} = 0
sentence.cells[0]
(1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (1, 3)
neighbour_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
Tested tuple (0, 2) is out of canvas.
Tested tuple (0, 4) is out of canvas.
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (-1, 3) is out of canvas.
{(0, 3)} = 0
sentence.cells[0]
(0, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (0, 3)
neighbour_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
safe_choices: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.suspected_mines_mild_danger: {(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_and_non_suspected_choices: set()
{(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_choices: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.suspected_mines_mild_danger: {(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_and_non_suspected_choices: set()
{(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
Searching for an option safer than a random move.
No known safe moves, AI making random move.
(2, 6)
move.else
nearby
3
move
(2, 6)
type(move):
<class 'tuple'>
if isinstance:add_knowledge.type(cell):
<class 'tuple'>
cell in add_knowledge
(2, 6)
add_knowledge.type(cell)
<class 'tuple'>
<class 'tuple'>
self.cells {(2, 6)}
new_sentence
{(2, 6)} = 3
4) mark any additional cells as safe or as mines_known if it can be concluded based on the AI's knowledge base
----------------------
knowledge:
{(5, 7)} = 1
{(7, 7)} = 0
{(7, 6)} = 0
{(6, 7)} = 1
{(6, 6)} = 1
{(7, 5)} = 0
{(6, 5)} = 1
{(7, 4)} = 0
{(6, 4)} = 0
{(7, 3)} = 0
{(6, 3)} = 0
{(5, 4)} = 1
{(5, 3)} = 1
{(5, 5)} = 1
{(7, 2)} = 1
{(6, 2)} = 1
{(5, 2)} = 1
{(7, 0)} = 1
{(5, 0)} = 0
{(5, 1)} = 0
{(6, 0)} = 1
{(4, 0)} = 1
{(4, 1)} = 1
{(6, 1)} = 1
{(4, 2)} = 2
{(4, 7)} = 2
{(1, 7)} = 1
{(0, 1)} = 1
{(2, 3)} = 0
{(2, 2)} = 2
{(2, 4)} = 1
{(3, 3)} = 1
{(1, 3)} = 0
{(1, 2)} = 1
{(1, 4)} = 1
{(3, 2)} = 2
{(3, 4)} = 1
{(0, 3)} = 0
{(0, 2)} = 1
{(0, 4)} = 1
{(2, 0)} = 2
{(4, 4)} = 1
{(2, 6)} = 3
-----------------------
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (4, 7)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 6)
cell: (2, 6)
neighbor_cells_sum: 4
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 7)}
len(self.cells): 1
{(5, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 6)
cell: (2, 6)
neighbor_cells_sum: 2
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
cell: (2, 6)
neighbor_cells_sum: 3
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 6)
cell: (2, 6)
neighbor_cells_sum: 2
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 7)}
len(self.cells): 1
{(6, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 7)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 7)
cell: (2, 6)
neighbor_cells_sum: 4
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 6)}
len(self.cells): 1
{(6, 6)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (2, 6)
neighbor_cells_sum: 2
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 6)
cell: (2, 6)
neighbor_cells_sum: 3
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 5)}
len(self.cells): 1
{(6, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (2, 6)
neighbor_cells_sum: 1
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 5)
cell: (2, 6)
neighbor_cells_sum: 4
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (2, 6)
neighbor_cells_sum: 2
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 4)
cell: (2, 6)
neighbor_cells_sum: 5
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 5)
cell: (2, 6)
neighbor_cells_sum: 4
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 4)}
len(self.cells): 1
{(5, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 4)
cell: (2, 6)
neighbor_cells_sum: 6
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 3)}
len(self.cells): 1
{(5, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
neighbor_cell_suspected: (6, 5)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (6, 4)
neighbor_cell_suspected: (6, 6)
cell: (2, 6)
neighbor_cells_sum: 4
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 5)}
len(self.cells): 1
{(5, 5)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (2, 6)
neighbor_cells_sum: 2
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 2)}
len(self.cells): 1
{(7, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 3)
cell: (2, 6)
neighbor_cells_sum: 4
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 2)}
len(self.cells): 1
{(6, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 3)
cell: (2, 6)
neighbor_cells_sum: 6
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(5, 2)}
len(self.cells): 1
{(5, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (6, 1)
cell: (2, 6)
neighbor_cells_sum: 2
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(7, 0)}
len(self.cells): 1
{(7, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (6, 1)
cell: (2, 6)
neighbor_cells_sum: 4
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
cell: (2, 6)
neighbor_cells_sum: 8
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (6, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (7, 1)
cell: (2, 6)
neighbor_cells_sum: 2
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 0)}
len(self.cells): 1
{(6, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (5, 1)
cell: (2, 6)
neighbor_cells_sum: 1
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
cells: {(3, 6)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
neighbor_cell_known: (3, 6)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (2, 7)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (3, 7)
cells: {(1, 6)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
neighbor_cell_known: (3, 6)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (2, 7)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (3, 7)
cells: {(2, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
neighbor_cell_known: (3, 6)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (2, 7)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (3, 7)
cells: {(2, 7)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
neighbor_cell_known: (3, 6)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (2, 7)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (3, 7)
cells: {(1, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
neighbor_cell_known: (3, 6)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (2, 7)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (3, 7)
cells: {(1, 7)}
intersection_1: {(1, 7)}
intersection_2: {(1, 7)}
(1, 7) cell is a false negative. Not a mines!
cells: {(3, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
neighbor_cell_known: (3, 6)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (2, 7)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (3, 7)
cells: {(3, 7)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
neighbor_cell_known: (3, 6)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (2, 7)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (3, 7)
Known mines
self.count: 1
len(self.cells): {(4, 0)}
len(self.cells): 1
{(4, 0)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (4, 0)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
cell: (2, 6)
neighbor_cells_sum: 6
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(4, 1)}
len(self.cells): 1
{(4, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
neighbor_cell_suspected: (7, 1)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (6, 0)
neighbor_cell_suspected: (6, 2)
neighbor_cell_suspected: (5, 0)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (7, 0)
neighbor_cell_suspected: (7, 2)
cell: (2, 6)
neighbor_cells_sum: 5
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
Known mines
self.count: 1
len(self.cells): {(6, 1)}
len(self.cells): 1
{(6, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 2)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (5, 1)
neighbor_cell_suspected: (5, 3)
cell: (2, 6)
neighbor_cells_sum: 6
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
neighbor_cell_suspected: (5, 7)
neighbor_cell_suspected: (3, 7)
neighbor_cell_suspected: (4, 6)
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (5, 6)
cell: (2, 6)
neighbor_cells_sum: 1
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (0, 7)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (0, 6)
neighbor_cell_suspected: (2, 6)
cell: (2, 6)
neighbor_cells_sum: 3
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: None
cell_count: 1
neighbor cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
free_neighbor_cells: {(2, 7), (1, 5), (3, 7), (3, 6), (1, 6), (2, 5), (3, 5)}
Known mines
self.count: 1
len(self.cells): {(1, 7)}
len(self.cells): 1
{(1, 7)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (0, 0)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (1, 2)
cell: (2, 6)
neighbor_cells_sum: 2
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(0, 1)}
len(self.cells): 1
{(0, 1)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
cell: (2, 6)
neighbor_cells_sum: 9
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
cell: (2, 6)
neighbor_cells_sum: 4
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
cell: (2, 6)
neighbor_cells_sum: 3
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(2, 4)}
len(self.cells): 1
{(2, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (3, 2)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (4, 4)
cell: (2, 6)
neighbor_cells_sum: 9
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(3, 3)}
len(self.cells): 1
{(3, 3)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (2, 4)
cell: (2, 6)
neighbor_cells_sum: 7
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
cell: (2, 6)
neighbor_cells_sum: 4
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(1, 2)}
len(self.cells): 1
{(1, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
cell: (2, 6)
neighbor_cells_sum: 2
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(1, 4)}
len(self.cells): 1
{(1, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 2)
neighbor_cell_suspected: (2, 2)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (4, 1)
neighbor_cell_suspected: (4, 3)
cell: (2, 6)
neighbor_cells_sum: 6
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (4, 4)
neighbor_cell_suspected: (2, 4)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (2, 3)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
cell: (2, 6)
neighbor_cells_sum: 3
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(3, 4)}
len(self.cells): 1
{(3, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (0, 2)
neighbor_cell_suspected: (0, 4)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (1, 4)
cell: (2, 6)
neighbor_cells_sum: 4
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 2)
neighbor_cell_suspected: (0, 1)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (1, 3)
cell: (2, 6)
neighbor_cells_sum: 2
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(0, 2)}
len(self.cells): 1
{(0, 2)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (1, 4)
neighbor_cell_suspected: (0, 3)
neighbor_cell_suspected: (0, 5)
neighbor_cell_suspected: (1, 3)
neighbor_cell_suspected: (1, 5)
cell: (2, 6)
neighbor_cells_sum: 1
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
cells: {(3, 6)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
neighbor_cell_known: (3, 6)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (2, 7)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (3, 7)
cells: {(1, 6)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
neighbor_cell_known: (3, 6)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (2, 7)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (3, 7)
cells: {(2, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
neighbor_cell_known: (3, 6)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (2, 7)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (3, 7)
cells: {(2, 7)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
neighbor_cell_known: (3, 6)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (2, 7)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (3, 7)
cells: {(1, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
neighbor_cell_known: (3, 6)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (2, 7)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (3, 7)
cells: {(1, 7)}
intersection_1: {(1, 7)}
intersection_2: {(1, 7)}
(1, 7) cell is a false negative. Not a mines!
cells: {(3, 5)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
neighbor_cell_known: (3, 6)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (2, 7)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (3, 7)
cells: {(3, 7)}
intersection_1: set()
intersection_2: set()
Marking mines_known by the sum of neighbors strategy
[(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
neighbor_cell_known: (3, 6)
neighbor_cell_known: (1, 6)
neighbor_cell_known: (2, 5)
neighbor_cell_known: (2, 7)
neighbor_cell_known: (1, 5)
neighbor_cell_known: (3, 5)
neighbor_cell_known: (3, 7)
Known mines
self.count: 1
len(self.cells): {(0, 4)}
len(self.cells): 1
{(0, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (3, 1)
neighbor_cell_suspected: (3, 0)
neighbor_cell_suspected: (1, 0)
neighbor_cell_suspected: (2, 1)
neighbor_cell_suspected: (1, 1)
neighbor_cell_suspected: (3, 1)
cell: (2, 6)
neighbor_cells_sum: 0
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
self.mines_flagged:
set()
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
neighbor_cell_suspected: (5, 4)
neighbor_cell_suspected: (3, 4)
neighbor_cell_suspected: (4, 3)
neighbor_cell_suspected: (4, 5)
neighbor_cell_suspected: (3, 3)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (5, 3)
neighbor_cell_suspected: (5, 5)
cell: (2, 6)
neighbor_cells_sum: 5
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
Known mines
self.count: 1
len(self.cells): {(4, 4)}
len(self.cells): 1
{(4, 4)}
These are false negative. Not a mines!
self.mines_flagged:
set()
neighbor_cell_suspected: (3, 6)
neighbor_cell_suspected: (1, 6)
neighbor_cell_suspected: (2, 5)
neighbor_cell_suspected: (2, 7)
neighbor_cell_suspected: (1, 5)
neighbor_cell_suspected: (1, 7)
neighbor_cell_suspected: (3, 5)
neighbor_cell_suspected: (3, 7)
cell: (2, 6)
neighbor_cells_sum: 1
neighbor_cells: [(3, 6), (1, 6), (2, 5), (2, 7), (1, 5), (1, 7), (3, 5), (3, 7)]
cell_count: 1
self.mines_flagged:
set()
board: [[None, 1, 1, 0, 1, None, None, None], [None, None, 1, 0, 1, None, None, 1], [2, None, 2, 0, 1, None, None, None], [None, None, 2, 1, 1, None, None, None], [1, 1, 2, None, 1, None, None, 2], [0, 0, 1, 1, 1, 1, None, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, None, 1, 0, 0, 0, 0, 0]]
Checking pattern [1, 2, 1]
Checking pattern [1, 2, 2, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1, 1]
Checking pattern [1, 1, 1, 1, 1]
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1, 1]
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
Checking pattern [1, 1, 1]
Pattern found horizontally
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Pattern found horizontally
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
Cell is out of the canvas or None. Not doing anything.
ai.make_safe_move()
self.safes_known:
{(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.mines_known_by_ai:
{(4, 3), (3, 1), (3, 7), (4, 6), (0, 5), (1, 0), (1, 6), (2, 5), (7, 1), (3, 0), (4, 5), (5, 6), (3, 6), (0, 7), (2, 1), (2, 7), (1, 5), (3, 5), (0, 0), (1, 1), (0, 6)}
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (3, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (4, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (5, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (0, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (1, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (2, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_known_cell: (6, 3)
safe_choices:
set()
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (7, 8) is out of canvas.
Tested tuple (8, 7) is out of canvas.
tested_neighbor_tuple: (6, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 7)} = 0
sentence.cells[0]
(7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 7)
neighbour_cells: [(6, 7), (7, 6), (6, 6)]
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 7)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 6) is out of canvas.
tested_neighbor_tuple: (6, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 6)} = 0
sentence.cells[0]
(7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 6)
neighbour_cells: [(6, 6), (7, 5), (7, 7), (6, 5), (6, 7)]
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 6)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 5) is out of canvas.
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 5)} = 0
sentence.cells[0]
(7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 5)
neighbour_cells: [(6, 5), (7, 4), (7, 6), (6, 4), (6, 6)]
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 4) is out of canvas.
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 4)} = 0
sentence.cells[0]
(7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 4)
neighbour_cells: [(6, 4), (7, 3), (7, 5), (6, 3), (6, 5)]
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 5)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 4)} = 0
sentence.cells[0]
(6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 4)
neighbour_cells: [(7, 4), (5, 4), (6, 3), (6, 5), (5, 3), (5, 5), (7, 3), (7, 5)]
tested_neighbor_tuple: (7, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (8, 3) is out of canvas.
tested_neighbor_tuple: (6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(7, 3)} = 0
sentence.cells[0]
(7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (7, 3)
neighbour_cells: [(6, 3), (7, 2), (7, 4), (6, 2), (6, 4)]
tested_neighbor_tuple: (6, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (7, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (5, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(6, 3)} = 0
sentence.cells[0]
(6, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (6, 3)
neighbour_cells: [(7, 3), (5, 3), (6, 2), (6, 4), (5, 2), (5, 4), (7, 2), (7, 4)]
Tested tuple (5, -1) is out of canvas.
tested_neighbor_tuple: (5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (6, 0) is out of canvas.
Tested tuple (4, 0) is out of canvas.
{(5, 0)} = 0
sentence.cells[0]
(5, 0)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 0)
neighbour_cells: [(6, 0), (4, 0), (5, 1), (4, 1), (6, 1)]
Tested tuple (5, 0) is out of canvas.
tested_neighbor_tuple: (5, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (6, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (4, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(5, 1)} = 0
sentence.cells[0]
(5, 1)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (5, 1)
neighbour_cells: [(6, 1), (4, 1), (5, 0), (5, 2), (4, 0), (4, 2), (6, 0), (6, 2)]
tested_neighbor_tuple: (2, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (3, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
{(2, 3)} = 0
sentence.cells[0]
(2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (2, 3)
neighbour_cells: [(3, 3), (1, 3), (2, 2), (2, 4), (1, 2), (1, 4), (3, 2), (3, 4)]
tested_neighbor_tuple: (1, 2)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (1, 4)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
tested_neighbor_tuple: (2, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (0, 3) is out of canvas.
{(1, 3)} = 0
sentence.cells[0]
(1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (1, 3)
neighbour_cells: [(2, 3), (0, 3), (1, 2), (1, 4), (0, 2), (0, 4), (2, 2), (2, 4)]
Tested tuple (0, 2) is out of canvas.
Tested tuple (0, 4) is out of canvas.
tested_neighbor_tuple: (1, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
Tested tuple (-1, 3) is out of canvas.
{(0, 3)} = 0
sentence.cells[0]
(0, 3)
self.moves_made: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
safe_cell: (0, 3)
neighbour_cells: [(1, 3), (0, 2), (0, 4), (1, 2), (1, 4)]
safe_choices: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.suspected_mines_mild_danger: {(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_and_non_suspected_choices: set()
{(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_choices: {(4, 0), (3, 4), (5, 4), (5, 1), (5, 7), (0, 2), (2, 2), (1, 3), (7, 4), (6, 2), (7, 7), (6, 5), (4, 2), (3, 3), (5, 0), (5, 3), (0, 1), (2, 4), (1, 2), (0, 4), (6, 1), (7, 0), (6, 4), (7, 3), (6, 7), (7, 6), (3, 2), (4, 1), (4, 7), (5, 2), (4, 4), (5, 5), (0, 3), (2, 0), (1, 4), (2, 3), (1, 7), (2, 6), (7, 2), (6, 0), (6, 6), (7, 5), (6, 3)}
self.suspected_mines_mild_danger: {(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
safe_and_non_suspected_choices: set()
{(7, 4), (5, 5), (5, 4), (4, 6), (6, 4), (6, 7), (7, 6), (5, 6), (6, 6), (4, 7)}
Searching for an option safer than a random move.
No known safe moves, AI making random move.
(5, 6)

